{"version":3,"sources":["utilities/encrypt.js","views/Home.js","utilities/random.js","views/About.js","lock.svg","components/Navbar.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["VOWELS","Home","useState","randomKey","setRandomKey","originalText","setOriginalText","encryptedText","setEncryptedText","isLoading","setIsLoading","handleSubmit","e","preventDefault","string","target","value","key","MIN","MAX","Math","floor","random","toString","split","generateRandom","map","letter","match","characterCode","charCodeAt","shift","includes","String","fromCharCode","parseInt","join","encrypt","className","onSubmit","type","name","id","placeholder","required","About","href","src","alt","Navbar","logo","height","width","to","Footer","App","role","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4695b39d.chunk.js","sourcesContent":["const ALBHABET_NUM = 26   // alphabet letters amount\nconst VOWELS = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U']\n\n// Character Code reference for shifting limitation\n// letter 'A' start on 65\n// letter 'Z' end on 90\n// letter 'a' start on 97\n// letter 'z' end on 122\n\nexport function encrypt(originalText, randomKey) {\n  return originalText\n    .split('')\n    .map(letter => {\n      if (letter.match(/[a-z]/i)) {   // match regex case insensitive\n        let characterCode = letter.charCodeAt()\n        let shift = characterCode >= 65 && characterCode <= 90 ? 65 :\n          characterCode >= 97 && characterCode <= 122 ? 97 : 0\n\n        if (VOWELS.includes(letter))\n          return String.fromCharCode(((characterCode - shift + parseInt(randomKey[0]))\n            % ALBHABET_NUM) + shift)\n        else\n          return String.fromCharCode(((characterCode - shift + parseInt(randomKey[1]))\n            % ALBHABET_NUM) + shift)\n      }\n\n      return letter   // if the letter is non-character, just return as it is\n    })\n    .join('')\n}\n","import { useState } from 'react'\nimport { encrypt } from '../utilities/encrypt.js';\nimport { generateRandom } from '../utilities/random.js';\nimport '../css/Home.css'\n\nconst MIN = 11\nconst MAX = 100\n\nfunction Home() {\n  const [randomKey, setRandomKey] = useState(null)\n  const [originalText, setOriginalText] = useState('')\n  const [encryptedText, setEncryptedText] = useState('')\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    setIsLoading(true);\n\n    let string = e.target[0].value\n    const key = generateRandom(MIN, MAX)\n\n    string ? setRandomKey(key) : setRandomKey(null)\n    setOriginalText(string)\n    setEncryptedText(encrypt(string, key))\n\n    e.target[0].value = ''\n    setIsLoading(false);\n  }\n\n\n  return (\n    <>\n      <h1>Try Encrypt!</h1>\n      <p>\n        The key for encryption will be a two digit number randomly generated\n        within the range 11 to 99.  The 1st digit of the key indicates the\n        number of characters to move forward for vowel characters, while the 2nd\n        digit for consonant. Each submission has a unique random key generated.\n      </p>\n      <div className=\"container-input\">\n        <div className=\"container-result\">\n          <h2>Result</h2>\n          {isLoading &&\n              <small>Loading..</small>\n          }\n          <p>\n            <strong>Random key :</strong> {randomKey}\n          </p>\n          <p>\n            <strong>Original text :</strong> {originalText}\n          </p>\n          <p>\n            <strong>Encrypted text :</strong> {encryptedText}\n          </p>\n        </div>\n        <form\n          onSubmit={(e) => handleSubmit(e, originalText)}\n        >\n          <input\n            type=\"text\"\n            name=\"input-plaintext\"\n            id=\"input-plaintext\"\n            placeholder=\"Text to be encrypted\"\n            required\n          />\n\n          <button\n            type=\"submit\">\n            <strong>ENCRYPT!</strong>\n          </button>\n        </form>\n      </div>\n    </>\n  )\n}\n\n\nexport default Home\n","// MAX is exclusive so need to be increased by one\n// return an array of two number for the encryption algorithm\nexport function generateRandom(MIN, MAX) {\n  return (Math.floor(Math.random() * MAX) + MIN).toString().split('')\n}\n","import '../css/About.css'\n\nfunction About() {\n  return (\n    <div id=\"page-about\">\n      <h1>About</h1>\n      <div>\n        <a href=\"https://github.com/hnnazm/encrypt\">\n          <img src=\"https://icons.iconarchive.com/icons/papirus-team/papirus-apps/32/github-icon.png\" alt=\"Github logo\" />\n        </a>\n        <h1>Encryption Application</h1>\n        <p>This website is created solely for the purpose of coding assessment\n          at INVOKE.\n        </p>\n\n        <h2>Technology Stack</h2>\n        <ol>\n          <li>NodeJS</li>\n          <li>DigitalOcean App</li>\n        </ol>\n\n        <h2>Dependencies</h2>\n        <ol>\n          <li>Core React Library</li>\n          <li>react-router-dom</li>\n        </ol>\n\n        <h2>Code Explaination</h2>\n        <p>The detailed code explaination will be on README.md file located at\n          the repository\n        </p>\n\n        <h2>References</h2>\n        <ul>\n          <li><a href=\"https://reactjs.org\">React Documentation</a></li>\n          <li><a href=\"https://reactrouter.com\">react-router-dom documentation</a></li>\n          <li><a href=\"https://en.wikipedia.org/wiki/Caesar_cipher\">Caesar cipher</a></li>\n          <li><a href=\"https://www.asciitable.com\">ASCII table</a></li>\n          <li><a href=\"https://stackoverflow.com/a/33085029\">StackOverflow Question</a></li>\n        </ul>\n      </div>\n    </div>\n  )\n}\n\nexport default About\n","export default __webpack_public_path__ + \"static/media/lock.7d0e8d15.svg\";","import { Link } from 'react-router-dom'\nimport '../css/Navbar.css'\nimport logo from '../lock.svg'\n\nfunction Navbar() {\n  return (\n    <header>\n      <div id=\"container-branding\">\n        <img\n          src={logo}\n          alt=\"logo\"\n          height=\"30\"\n          width=\"30\"\n        />\n        <h2>Encryption App</h2>\n      </div>\n      <nav>\n        <Link to=\"/\">Home</Link>\n        <Link to=\"/about\">About</Link>\n      </nav>\n    </header>\n  )\n}\n\nexport default Navbar\n","import '../css/Footer.css'\n\nfunction Footer() {\n  return (\n    <footer>\n      <p>Website created by <strong>Hannan Azmi</strong></p>\n    </footer>\n  )\n}\n\nexport default Footer\n","import './App.css'\nimport { \n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom'\nimport Home from './views/Home.js'\nimport About from './views/About.js'\nimport Navbar from './components/Navbar.js'\nimport Footer from './components/Footer.js'\n\nfunction App() {\n  return (\n    <div id=\"app\">\n      <Router>\n        <Navbar />\n        <main role=\"main\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"/about\">\n              <About />\n            </Route>\n          </Switch>\n        </main>\n      </Router>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}